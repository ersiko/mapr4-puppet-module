<?xml version="1.0"?>
<?xml-stylesheet type="text/xsl" href="configuration.xsl"?>
<!--
   Licensed to the Apache Software Foundation (ASF) under one or more
   contributor license agreements.  See the NOTICE file distributed with
   this work for additional information regarding copyright ownership.
   The ASF licenses this file to You under the Apache License, Version 2.0
   (the "License"); you may not use this file except in compliance with
   the License.  You may obtain a copy of the License at

       http://www.apache.org/licenses/LICENSE-2.0

   Unless required by applicable law or agreed to in writing, software
   distributed under the License is distributed on an "AS IS" BASIS,
   WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
   See the License for the specific language governing permissions and
   limitations under the License.
-->

<configuration>

<!--
     WARNING!! THIS FILE IS MANAGED BY PUPPET MODULE "mapr::hive"
     ANY LOCAL CHANGES YOU MAKE WILL BE LOST
     
     FOR CONFIGURATION DOCUMENTATION, PLEASE REFER TO:
     https://wiki.beatsmusic.com/display/BDE/Hive+configuration
-->

  <property>
    <name>javax.jdo.option.ConnectionURL</name>
    <value>jdbc:mysql://<%= @hive_mysql_server%>:3306/<%= @hive_mysql_table%>?createDatabaseIfNotExist=true</value>
    <description>JDBC connect string for a JDBC metastore</description>
  </property>

  <property>
    <name>javax.jdo.option.ConnectionDriverName</name>
    <value>com.mysql.jdbc.Driver</value>
    <description>Driver class name for a JDBC metastore</description>
  </property>

  <property>
    <name>javax.jdo.option.ConnectionUserName</name>
    <value><%= @hive_mysql_user%></value>
    <description>username to use against metastore database</description>
  </property>

  <property>
    <name>javax.jdo.option.ConnectionPassword</name>
    <value><%= @hive_mysql_pass%></value>
    <description>password to use against metastore database</description>
  </property>

  <property>
    <name>hive.metastore.client.socket.timeout</name>
    <value>100</value>
  </property>

  <property>
    <name>hive.server.read.socket.timeout</name>
    <value>120</value>
  </property>

  <property>
    <name>hive.warehouse.subdir.inherit.perms</name>
    <value>true</value>
  </property>

  <property>
    <name>hive.auto.convert.join</name>
    <value>true</value>
  </property>

  <property>
    <name>hive.default.fileformat</name>
    <value>SequenceFile</value>
  </property>

  <property>
    <name>hive.query.result.fileformat</name>
    <value>SequenceFile</value>
  </property>

  <property>
    <name>datanucleus.fixedDatastore</name>
    <value>true</value>
  </property>

  <property>
    <name>datanucleus.autoCreateSchema</name>
    <value>false</value>
  </property>

  <!-- see PYBD-42 -->
  <property>
    <name>hive.metastore.execute.setugi</name>
    <value>true</value>
    <description>In unsecure mode, setting this property to true will
        cause the metastore to execute DFS operations using the client's
        reported user and group permissions. Note that this property must be
        set on both the client and server sides. Further note that its best
        effort. If client sets its to true and server sets it to false, client
        setting will be ignored.
    </description>
  </property>

  <!-- see BD-1002 -->
  <property>
    <name>hive.querylog.enable.plan.progress</name>
    <value>false</value>
  </property>

  <!-- see BD-1293 -->
  <property>
    <name>hive.querylog.location</name>
    <value><%= @hive_log_location%></value>
  </property>

  <property>
    <name>hive.support.concurrency</name>
    <description>Enable Hive's Table Lock Manager Service</description>
    <value>true</value>
  </property>
 
  <property>
    <name>hive.zookeeper.quorum</name>
    <description>Zookeeper quorum used by Hive's Table Lock Manager</description>
    <value><%= @mapr_zookeeper%></value>
  </property>
 
  <property>
    <name>hive.zookeeper.client.port</name>
    <value>5181</value>
    <description>The Zookeeper client port. The MapR default clientPort is 5181.</description>
  </property>
</configuration>
